provider "aws" {
  region = "eu-north-1"
}

resource "aws_eks_cluster" "idp_cluster" {
  name     = "idp-cluster"
  role_arn = aws_iam_role.eks_role.arn
  vpc_config {
    subnet_ids = ["subnet-0bd71d19466c0fd64", "subnet-00d340589350b29e9"] # Replace with your subnet IDs
  }
}

resource "aws_iam_role" "eks_role" {
  name = "idp-eks-role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "eks.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "eks_policy" {
  role       = aws_iam_role.eks_role.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
}

resource "aws_eks_node_group" "node_group" {
  cluster_name    = aws_eks_cluster.idp_cluster.name
  node_group_name = "idp-nodes"
  node_role_arn   = aws_iam_role.node_role.arn
  subnet_ids      = ["subnet-0bd71d19466c0fd64", "subnet-00d340589350b29e9"] # Replace with your subnet IDs
  scaling_config {
    desired_size = 2
    max_size     = 3
    min_size     = 1
  }
}

resource "aws_iam_role" "node_role" {
  name = "idp-node-role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "node_policy" {
  role       = aws_iam_role.node_role.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
}